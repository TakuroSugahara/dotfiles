# C-bのキーバインドを解除する
unbind C-b
# prefixキーをC-Spaceに変更する
set -g prefix C-Space
bind Space send-prefix

# <C-Space><Space>でコピーモード
bind Space copy-mode
bind C-Space copy-mode

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# C-a*2でtmux内のプログラムにC-aを送る
bind C-a send-prefix

# | でペインを縦に分割する
bind | split-window -h -c "#{pane_current_path}"

# - でペインを横に分割する
bind - split-window -v

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

# マウス操作を有効にする
setw -g mouse on

# 256色端末を使用する
set-option -g default-terminal 
set-option -ga terminal-overrides ',xterm-256color:Tc'

# ステータスバーの色を設定する
set -g status-fg "#bebebe"
set -g status-bg "default"
set-option -g status-style bg=default

# ウィンドウリストの色を設定する
setw -g window-status-style fg="default","dim"

# アクティブなウィンドウを目立たせる
setw -g window-status-current-style fg="#bebebe","bright",bg="default"

# ペインボーダーの色を設定する
set -g pane-border-style fg="#bebebe",bg="default"
# アクティブなペインを目立たせる
set -g pane-active-border-style fg="white",bg="default"

# ステータスバーを設定する;
# branchとか表示したい
# set -g status-left-length 40
set -g status-left ""
set -g status-right ""

# リフレッシュの間隔を設定する
set -g status-interval 60
# ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
# ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
set -g status-position top

# windowモードでvim化
set-window-option -g mode-keys vi
# 選択開始: v
bind -Tcopy-mode-vi v send -X begin-selection
# 行選択: V
bind -Tcopy-mode-vi V send -X select-line
# 矩形選択: C-v
bind -Tcopy-mode-vi C-v send -X rectangle-toggle
# ヤンク: y
bind -Tcopy-mode-vi y send -X copy-selection
# 行ヤンク: Y
bind -Tcopy-mode-vi Y send -X copy-line
# ペースト: C-p
bind-key S-p paste-buffer
# clipボードの反映
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"<F29>

# 新規ウィンドウ作成時にカレントパスを引き継ぐ
bind c new-window -c "#{pane_current_path}"

# vim と tmuxの移動をシームレスに
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# `C-s` で NAVIGATOR table に切り替え
bind -n C-w switch-client -T NAVIGATOR

# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# `C-w` が Tmux に喰われてしまうので，2回打つことで Vim に `C-w` を送れるようにして救う
bind -T NAVIGATOR C-w send-keys C-w
bind -T NAVIGATOR h if-shell "$is_vim" "send-keys C-w h"  "select-pane -L"
bind -T NAVIGATOR j if-shell "$is_vim" "send-keys C-w j"  "select-pane -D"
bind -T NAVIGATOR k if-shell "$is_vim" "send-keys C-w k"  "select-pane -U"
bind -T NAVIGATOR l if-shell "$is_vim" "send-keys C-w l"  "select-pane -R"
bind -T NAVIGATOR = if-shell "$is_vim" "send-keys C-w ="
bind -T NAVIGATOR r if-shell "$is_vim" "send-keys C-w r"

set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-open           \
'

# tmux-yank setting
set -g @yank_selection 'primary'
set -g @yank_action 'copy-pipe'

# Must be install tpm. ex) git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
run-shell '~/.tmux/plugins/tpm/tpm'

